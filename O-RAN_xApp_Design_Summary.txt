
Project Title:
GRU-GAT-PPO Enabled xApp for Joint Resource Slicing and Transmission Time Scheduling in O-RAN

System Overview:
Component       | Description
--------------- | -------------------------------------------------------------------------
DRL Agent       | A GRU-GAT-PPO Python agent that reads real UE metrics and outputs control decisions
xApp (C)        | The interface between the DRL agent and the RAN. Encodes and transmits control messages via E2
gNB (FlexRIC)   | Receives and applies slicing + scheduling control at MAC layer granularity

Control Targets:
Control Function           | Mechanism
-------------------------- | ---------------------------------------------------------------------
Downlink Resource Slicing  | Slicing percentages for eMBB, URLLC, mMTC mapped to PRB quotas
Transmission Time Scheduling | Subframe-level sleep/active control using a_t, b_t, c_t parameters

Key Files:
Agent Side:
- env.py: Collects KPM & MAC data
- ppo_agent.py: Multi-actor PPO logic
- state_encoder.py: GRU encoder
- Output: writes [slice1, slice2, slice3, a_t, b_t, c_t, flag] into slice_ctrl.bin

xApp Side:
- eexapp.c: Reads slice_ctrl.bin, constructs control message using:
  - gen_rrm_policy_ratio_group() (3x for slicing)
  - Adds 4th group for time scheduling with:
    - Active_Subframe_1_8_4_3_6 (ID 14) → a_t
    - Sleep_Subframe_8_4_3_6 (ID 15) → b_t
    - Active_Subframe_2_8_4_3_6 (ID 16) → c_t
- Sends message via:
  control_sm_xapp_api(&node_id, SM_RC_ID, &rc_ctrl);

Control Message Format (E2SM-RC):
Group               | RAN Parameter ID | Value
------------------- | ---------------- | -----------------
Slice 1             | standard ID      | PRB quota 1
Slice 2             | standard ID      | PRB quota 2
Slice 3             | standard ID      | PRB quota 3
Time Scheduling     | 14               | a_t
                    | 15               | b_t
                    | 16               | c_t

gNB (FlexRIC Agent) Integration:
- Message received via E2SM-RC interface
- Parser extracts:
  if (param->ran_param_id == 14) gNB->a_t = value;
  if (param->ran_param_id == 15) gNB->b_t = value;
  if (param->ran_param_id == 16) gNB->c_t = value;
- MAC scheduler enforces:
  if (in_sleep_phase(sf_counter, a_t, b_t, c_t)) return;
  else apply_prb_slicing(slice1, slice2, slice3);

Key Properties:
Feature                  | Value/Status
------------------------ | -----------------------------
Control Period           | Every 10 ms (subframe-aligned)
DRL Decision Type        | Multi-Actor: Slicing (continuous) + Time (discrete)
Transmission Layer       | MAC Layer (DL-focused)
Protocol Used            | E2SM-RC (Control Style 1 / Format 1)
File Communication       | slice_ctrl.bin (7 integers)

Summary Flow:
[DRL Agent (Python)]
  ↓
slice_ctrl.bin: [3 slicing ratios, 3 time phases, 1 flag]
  ↓
[xApp (C)]
  ↓  -- constructs E2SM-RC message with 4 RAN parameter groups
  ↓
[RAN (gNB Agent)]
  ↓ -- parses slicing + scheduling
  ↓
[MAC Scheduler]
  ↳ Applies slicing
  ↳ Enforces a_t/b_t/c_t active/sleep per 10ms frame
